/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/Demon.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
// import { SkeletonUtils } from 'three-stdlib'
import { useBaseCharacter } from '../hooks/useBaseCharacter'

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/Demon.glb')
  // const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(scene)
  const animation = useAnimations(animations, group)
  for (const material in materials) {
    materials[material].metalness = -2
    materials[material].roughness = 1
  }
  const meshProps = useBaseCharacter(materials)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="CharacterArmature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.Root} />
          </group>
          <group name="Demon" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <skinnedMesh {...meshProps} name="Demon_1" geometry={nodes.Demon_1.geometry} material={materials.Demon_Main} skeleton={nodes.Demon_1.skeleton} />
            <skinnedMesh {...meshProps} name="Demon_2" geometry={nodes.Demon_2.geometry} material={materials.Black} skeleton={nodes.Demon_2.skeleton} />
            <skinnedMesh {...meshProps} name="Demon_3" geometry={nodes.Demon_3.geometry} material={materials.Eye_White} skeleton={nodes.Demon_3.skeleton} />
            <skinnedMesh {...meshProps} name="Demon_4" geometry={nodes.Demon_4.geometry} material={materials.Eye_Black} skeleton={nodes.Demon_4.skeleton} />
          </group>
          <skinnedMesh {...meshProps} name="Trident" geometry={nodes.Trident.geometry} material={materials.Black} skeleton={nodes.Trident.skeleton} position={[1.895, 1.734, -0.17]} scale={75.326} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Demon.glb')
